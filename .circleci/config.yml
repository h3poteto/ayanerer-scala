version: 2
jobs:
  build:
    docker:
      - image: h3poteto/play
        environment:
          DB_URL: "jdbc:mysql://127.0.0.1/ayanerer_test?characterEncoding=UTF8&connectionCollation=utf8mb4_general_ci&useSSL=false"
      - image: mysql:5.7
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    working_directory: /var/opt/app
    steps:
      - checkout
      - restore_cache:
          name: Restoring cache - activator
          keys:
            - activator-{{ checksum "build.sbt" }}
            - activator-
      - restore_cache:
          name: Restoring cache - ivy2
          keys:
            - ivy2-{{ checksum "build.sbt" }}
            - ivy2-
      - restore_cache:
          name: Restoring cache - sbt
          keys:
            - sbt-{{ checksum "build.sbt" }}
            - sbt-
      - restore_cache:
          name: Restoring cache - target
          keys:
            - target-{{ checksum "build.sbt" }}
            - target-
      - restore_cache:
          name: Restoring cache - project
          keys:
            - project-{{ checksum "build.sbt" }}
            - project-
      - restore_cache:
          name: Restoring cache - node_modules
          keys:
            - node_modules-{{ checksum "package.json" }}
            - node_modules-
      - run:
          name: Node packages install
          command: npm install
      - save_cache:
          name: Saving cache - node_modules
          key: node_modules-{{ checksum "package.json" }}
          paths:
            - "node_modules"
      - run:
          name: Install dependencies
          command: activator "help"
      - run:
          name: Create test database
          command: mysql -u root -h 127.0.0.1 -e 'create database ayanerer_test character set utf8mb4;'
      - run:
          name: Test
          command: activator "test"
      - save_cache:
          name: Saving cache - activator
          key: activator-{{ checksum "build.sbt" }}
          paths:
            - "~/.activator"
      - save_cache:
          name: Saving cache - ivy2
          key: ivy2-{{ checksum "build.sbt" }}
          paths:
            - "~/.ivy2"
      - save_cache:
          name: Saving cache - sbt
          key: sbt-{{ checksum "build.sbt" }}
          paths:
            - "~/.sbt"
      - save_cache:
          name: Saving cache - target
          key: target-{{ checksum "build.sbt" }}
          paths:
            - "target"
      - save_cache:
          name: Saving cache - project
          key: project-{{ checksum "build.sbt" }}
          paths:
            - "project/target"

      - deploy:
          name: conditionally run a deploy job
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              curl --user ${CIRCLE_API_TOKEN}: \
                --data build_parameters[CIRCLE_JOB]=deploy \
                --data revision=$CIRCLE_SHA1 \
                https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/$CIRCLE_BRANCH
            fi

  deploy:
    docker:
      - image: h3poteto/activator
        user: root
    working_directory: /var/opt/app
    branches:
      only:
        - master
    steps:
      - checkout
      - setup_remote_docker:
          reusable: true
          exclusive: true
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - restore_cache:
          name: Restoring cache - activator
          keys:
            - activator-{{ checksum "build.sbt" }}
            - activator-
      - restore_cache:
          name: Restoring cache - ivy2
          keys:
            - ivy2-{{ checksum "build.sbt" }}
            - ivy2-
      - restore_cache:
          name: Restoring cache - sbt
          keys:
            - sbt-{{ checksum "build.sbt" }}
            - sbt-
      - restore_cache:
          name: Restoring cache - target
          keys:
            - target-{{ checksum "build.sbt" }}
            - target-
      - restore_cache:
          name: Restoring cache - project
          keys:
            - project-{{ checksum "build.sbt" }}
            - project-
      - restore_cache:
          name: Restoring cache - node_modules
          keys:
            - node_modules-{{ checksum "package.json" }}
            - node_modules-
      - run:
          name: Node packages install
          command: npm install
      - save_cache:
          name: Saving cache - node_modules
          key: node_modules-{{ checksum "package.json" }}
          paths:
            - "node_modules"
      - run:
          name: Build release package
          command: activator "dist"
      - run:
          name: Docker build
          command: docker build -t h3poteto/ayanerer .
      - run:
          name: Docker login
          command: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - run:
          name: Docker push
          command: docker push h3poteto/ayanerer

